/**
 * Dispatcher
 * Will settle on-chain the merged transaction.
 */
const enum DispatcherState {
  READY,
  BUSY,
  FAILED
}

const enum SettlementActionType {
  MERKLE_COMMIT,
  ACCOUNT_CREATION
}

interface SettlementAction {
  type: SettlementActionType;
  run: (data: any) => void;
}

class Dispatcher {

  state = DispatcherState.READY;
  action: SettlementAction;
  MAX_RETRIES = 5;
  retries = 0;

  constructor(action: SettlementAction) {
    this.action = action;
  }

  /**
   * Indicates if the Dispatcher is ready to dispatch another transaction 
   * to the blockchain.
   */
  isReady(): boolean {
    return (this.state === DispatcherState.READY);
  }

  submitTransaction(data: any) {
    if (! this.isReady())
      return;

    this.state = DispatcherState.BUSY;
    let { txId, txStatus } = this.action.run(data);
    this.waitForTransaction(txId);
    return;
  }

  waitForTransaction(txId: string) {
    return;
  }
}

