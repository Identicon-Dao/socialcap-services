import { Field } from '../field.js';
import { TupleN } from '../util/types.js';
declare const MAX_BITS: 64;
export { MAX_BITS, exists, assert, bitSlice, witnessSlice, witnessNextValue, divideWithRemainder, };
declare function exists<N extends number, C extends () => TupleN<bigint, N>>(n: N, compute: C): TupleN<Field, N>;
declare function assert(stmt: boolean, message?: string): void;
declare function bitSlice(x: bigint, start: number, length: number): bigint;
declare function witnessSlice(f: Field, start: number, length: number): Field;
declare function witnessNextValue(current: Field): Field;
declare function divideWithRemainder(numerator: bigint, denominator: bigint): {
    quotient: bigint;
    remainder: bigint;
};
