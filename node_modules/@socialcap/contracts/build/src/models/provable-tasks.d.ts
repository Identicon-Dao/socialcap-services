import { Field } from 'o1js';
import { TASK_STATES } from "./states.js";
export { ProvableTask, TASK_STATES };
declare const ProvableTask_base: (new (value: {
    uid: import("o1js/dist/node/lib/field.js").Field;
    claimUid: import("o1js/dist/node/lib/field.js").Field;
    assigneeUid: import("o1js/dist/node/lib/field.js").Field;
    state: import("o1js/dist/node/lib/field.js").Field;
    assignedUTC: import("o1js/dist/node/lib/field.js").Field;
    completedUTC: import("o1js/dist/node/lib/field.js").Field;
    dueUTC: import("o1js/dist/node/lib/field.js").Field;
    rewarded: import("o1js/dist/node/lib/field.js").Field;
    reason: import("o1js/dist/node/lib/field.js").Field;
}) => {
    uid: import("o1js/dist/node/lib/field.js").Field;
    claimUid: import("o1js/dist/node/lib/field.js").Field;
    assigneeUid: import("o1js/dist/node/lib/field.js").Field;
    state: import("o1js/dist/node/lib/field.js").Field;
    assignedUTC: import("o1js/dist/node/lib/field.js").Field;
    completedUTC: import("o1js/dist/node/lib/field.js").Field;
    dueUTC: import("o1js/dist/node/lib/field.js").Field;
    rewarded: import("o1js/dist/node/lib/field.js").Field;
    reason: import("o1js/dist/node/lib/field.js").Field;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky.js").ProvablePure<{
    uid: import("o1js/dist/node/lib/field.js").Field;
    claimUid: import("o1js/dist/node/lib/field.js").Field;
    assigneeUid: import("o1js/dist/node/lib/field.js").Field;
    state: import("o1js/dist/node/lib/field.js").Field;
    assignedUTC: import("o1js/dist/node/lib/field.js").Field;
    completedUTC: import("o1js/dist/node/lib/field.js").Field;
    dueUTC: import("o1js/dist/node/lib/field.js").Field;
    rewarded: import("o1js/dist/node/lib/field.js").Field;
    reason: import("o1js/dist/node/lib/field.js").Field;
}> & {
    toInput: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        claimUid: import("o1js/dist/node/lib/field.js").Field;
        assigneeUid: import("o1js/dist/node/lib/field.js").Field;
        state: import("o1js/dist/node/lib/field.js").Field;
        assignedUTC: import("o1js/dist/node/lib/field.js").Field;
        completedUTC: import("o1js/dist/node/lib/field.js").Field;
        dueUTC: import("o1js/dist/node/lib/field.js").Field;
        rewarded: import("o1js/dist/node/lib/field.js").Field;
        reason: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        fields?: import("o1js/dist/node/lib/field.js").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field.js").Field, number][] | undefined;
    };
    toJSON: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        claimUid: import("o1js/dist/node/lib/field.js").Field;
        assigneeUid: import("o1js/dist/node/lib/field.js").Field;
        state: import("o1js/dist/node/lib/field.js").Field;
        assignedUTC: import("o1js/dist/node/lib/field.js").Field;
        completedUTC: import("o1js/dist/node/lib/field.js").Field;
        dueUTC: import("o1js/dist/node/lib/field.js").Field;
        rewarded: import("o1js/dist/node/lib/field.js").Field;
        reason: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        uid: string;
        claimUid: string;
        assigneeUid: string;
        state: string;
        assignedUTC: string;
        completedUTC: string;
        dueUTC: string;
        rewarded: string;
        reason: string;
    };
    fromJSON: (x: {
        uid: string;
        claimUid: string;
        assigneeUid: string;
        state: string;
        assignedUTC: string;
        completedUTC: string;
        dueUTC: string;
        rewarded: string;
        reason: string;
    }) => {
        uid: import("o1js/dist/node/lib/field.js").Field;
        claimUid: import("o1js/dist/node/lib/field.js").Field;
        assigneeUid: import("o1js/dist/node/lib/field.js").Field;
        state: import("o1js/dist/node/lib/field.js").Field;
        assignedUTC: import("o1js/dist/node/lib/field.js").Field;
        completedUTC: import("o1js/dist/node/lib/field.js").Field;
        dueUTC: import("o1js/dist/node/lib/field.js").Field;
        rewarded: import("o1js/dist/node/lib/field.js").Field;
        reason: import("o1js/dist/node/lib/field.js").Field;
    };
};
declare class ProvableTask extends ProvableTask_base {
    constructor(json?: any);
    fromJSON(json: {
        uid: string;
        claimUid: string;
        assigneeUid: string;
        state?: number;
        assignedUTC?: string;
        completedUTC?: string;
        dueUTC?: string;
        rewarded?: number;
        reason?: number;
    }): this;
    toJSON(): {
        uid: string;
        assigneeUid: string;
        claimUid: string;
        state: bigint;
        assignedUTC: string;
    };
    hash(): Field;
    key(): Field;
}
