import { Field, PublicKey } from 'o1js';
export { ProvableCredential };
declare const ProvableCredential_base: (new (value: {
    uid: import("o1js/dist/node/lib/field.js").Field;
    communityUid: import("o1js/dist/node/lib/field.js").Field;
    claimId: PublicKey;
    applicantId: PublicKey;
    type: any;
    description: any;
    alias: any;
    image: any;
    stars: import("o1js/dist/node/lib/field.js").Field;
    metadataHash: import("o1js/dist/node/lib/field.js").Field;
    issuedUTC: import("o1js/dist/node/lib/field.js").Field;
    expiresUTC: import("o1js/dist/node/lib/field.js").Field;
}) => {
    uid: import("o1js/dist/node/lib/field.js").Field;
    communityUid: import("o1js/dist/node/lib/field.js").Field;
    claimId: PublicKey;
    applicantId: PublicKey;
    type: any;
    description: any;
    alias: any;
    image: any;
    stars: import("o1js/dist/node/lib/field.js").Field;
    metadataHash: import("o1js/dist/node/lib/field.js").Field;
    issuedUTC: import("o1js/dist/node/lib/field.js").Field;
    expiresUTC: import("o1js/dist/node/lib/field.js").Field;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky.js").ProvablePure<{
    uid: import("o1js/dist/node/lib/field.js").Field;
    communityUid: import("o1js/dist/node/lib/field.js").Field;
    claimId: PublicKey;
    applicantId: PublicKey;
    type: any;
    description: any;
    alias: any;
    image: any;
    stars: import("o1js/dist/node/lib/field.js").Field;
    metadataHash: import("o1js/dist/node/lib/field.js").Field;
    issuedUTC: import("o1js/dist/node/lib/field.js").Field;
    expiresUTC: import("o1js/dist/node/lib/field.js").Field;
}> & {
    toInput: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        communityUid: import("o1js/dist/node/lib/field.js").Field;
        claimId: PublicKey;
        applicantId: PublicKey;
        type: any;
        description: any;
        alias: any;
        image: any;
        stars: import("o1js/dist/node/lib/field.js").Field;
        metadataHash: import("o1js/dist/node/lib/field.js").Field;
        issuedUTC: import("o1js/dist/node/lib/field.js").Field;
        expiresUTC: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        fields?: import("o1js/dist/node/lib/field.js").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field.js").Field, number][] | undefined;
    };
    toJSON: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        communityUid: import("o1js/dist/node/lib/field.js").Field;
        claimId: PublicKey;
        applicantId: PublicKey;
        type: any;
        description: any;
        alias: any;
        image: any;
        stars: import("o1js/dist/node/lib/field.js").Field;
        metadataHash: import("o1js/dist/node/lib/field.js").Field;
        issuedUTC: import("o1js/dist/node/lib/field.js").Field;
        expiresUTC: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        uid: string;
        communityUid: string;
        claimId: string;
        applicantId: string;
        type: any;
        description: any;
        alias: any;
        image: any;
        stars: string;
        metadataHash: string;
        issuedUTC: string;
        expiresUTC: string;
    };
    fromJSON: (x: {
        uid: string;
        communityUid: string;
        claimId: string;
        applicantId: string;
        type: any;
        description: any;
        alias: any;
        image: any;
        stars: string;
        metadataHash: string;
        issuedUTC: string;
        expiresUTC: string;
    }) => {
        uid: import("o1js/dist/node/lib/field.js").Field;
        communityUid: import("o1js/dist/node/lib/field.js").Field;
        claimId: PublicKey;
        applicantId: PublicKey;
        type: any;
        description: any;
        alias: any;
        image: any;
        stars: import("o1js/dist/node/lib/field.js").Field;
        metadataHash: import("o1js/dist/node/lib/field.js").Field;
        issuedUTC: import("o1js/dist/node/lib/field.js").Field;
        expiresUTC: import("o1js/dist/node/lib/field.js").Field;
    };
};
declare class ProvableCredential extends ProvableCredential_base {
    constructor(json?: any);
    fromJSON(json: {
        uid: string;
        communityUid: string;
        claimId: string;
        applicantId: string;
        type?: string;
        description?: string;
        image?: string;
        alias?: string;
        stars?: number;
        metadataHash?: Field;
        issuedUTC?: string;
        expiresUTC?: string;
    }): this;
    toJSON(): {
        uid: string;
        communityUid: string;
        claimId: string;
        applicantId: string;
    };
    hash(): Field;
    key(): Field;
}
