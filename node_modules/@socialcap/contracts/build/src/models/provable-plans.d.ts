import { Field } from 'o1js';
import { PLAN_STATES } from "./states.js";
export { ProvablePlan, PLAN_STATES };
declare const ProvablePlan_base: (new (value: {
    uid: import("o1js/dist/node/lib/field.js").Field;
    communityUid: import("o1js/dist/node/lib/field.js").Field;
    state: import("o1js/dist/node/lib/field.js").Field;
    name: any;
    description: any;
    image: any;
    evidenceHash: import("o1js/dist/node/lib/field.js").Field;
    metadataHash: import("o1js/dist/node/lib/field.js").Field;
    instructionsHash: import("o1js/dist/node/lib/field.js").Field;
    legalHash: import("o1js/dist/node/lib/field.js").Field;
    fee: import("o1js/dist/node/lib/field.js").Field;
    rewardsShare: import("o1js/dist/node/lib/field.js").Field;
    communityShare: import("o1js/dist/node/lib/field.js").Field;
    protocolShare: import("o1js/dist/node/lib/field.js").Field;
    strategyHash: import("o1js/dist/node/lib/field.js").Field;
    expiration: import("o1js/dist/node/lib/field.js").Field;
    revocable: import("o1js/dist/node/lib/bool.js").Bool;
    total: import("o1js/dist/node/lib/field.js").Field;
    available: import("o1js/dist/node/lib/field.js").Field;
    startsUTC: import("o1js/dist/node/lib/field.js").Field;
    endsUTC: import("o1js/dist/node/lib/field.js").Field;
    createdUTC: import("o1js/dist/node/lib/field.js").Field;
    updatedUTC: import("o1js/dist/node/lib/field.js").Field;
    approvedUTC: import("o1js/dist/node/lib/field.js").Field;
}) => {
    uid: import("o1js/dist/node/lib/field.js").Field;
    communityUid: import("o1js/dist/node/lib/field.js").Field;
    state: import("o1js/dist/node/lib/field.js").Field;
    name: any;
    description: any;
    image: any;
    evidenceHash: import("o1js/dist/node/lib/field.js").Field;
    metadataHash: import("o1js/dist/node/lib/field.js").Field;
    instructionsHash: import("o1js/dist/node/lib/field.js").Field;
    legalHash: import("o1js/dist/node/lib/field.js").Field;
    fee: import("o1js/dist/node/lib/field.js").Field;
    rewardsShare: import("o1js/dist/node/lib/field.js").Field;
    communityShare: import("o1js/dist/node/lib/field.js").Field;
    protocolShare: import("o1js/dist/node/lib/field.js").Field;
    strategyHash: import("o1js/dist/node/lib/field.js").Field;
    expiration: import("o1js/dist/node/lib/field.js").Field;
    revocable: import("o1js/dist/node/lib/bool.js").Bool;
    total: import("o1js/dist/node/lib/field.js").Field;
    available: import("o1js/dist/node/lib/field.js").Field;
    startsUTC: import("o1js/dist/node/lib/field.js").Field;
    endsUTC: import("o1js/dist/node/lib/field.js").Field;
    createdUTC: import("o1js/dist/node/lib/field.js").Field;
    updatedUTC: import("o1js/dist/node/lib/field.js").Field;
    approvedUTC: import("o1js/dist/node/lib/field.js").Field;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky.js").ProvablePure<{
    uid: import("o1js/dist/node/lib/field.js").Field;
    communityUid: import("o1js/dist/node/lib/field.js").Field;
    state: import("o1js/dist/node/lib/field.js").Field;
    name: any;
    description: any;
    image: any;
    evidenceHash: import("o1js/dist/node/lib/field.js").Field;
    metadataHash: import("o1js/dist/node/lib/field.js").Field;
    instructionsHash: import("o1js/dist/node/lib/field.js").Field;
    legalHash: import("o1js/dist/node/lib/field.js").Field;
    fee: import("o1js/dist/node/lib/field.js").Field;
    rewardsShare: import("o1js/dist/node/lib/field.js").Field;
    communityShare: import("o1js/dist/node/lib/field.js").Field;
    protocolShare: import("o1js/dist/node/lib/field.js").Field;
    strategyHash: import("o1js/dist/node/lib/field.js").Field;
    expiration: import("o1js/dist/node/lib/field.js").Field;
    revocable: import("o1js/dist/node/lib/bool.js").Bool;
    total: import("o1js/dist/node/lib/field.js").Field;
    available: import("o1js/dist/node/lib/field.js").Field;
    startsUTC: import("o1js/dist/node/lib/field.js").Field;
    endsUTC: import("o1js/dist/node/lib/field.js").Field;
    createdUTC: import("o1js/dist/node/lib/field.js").Field;
    updatedUTC: import("o1js/dist/node/lib/field.js").Field;
    approvedUTC: import("o1js/dist/node/lib/field.js").Field;
}> & {
    toInput: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        communityUid: import("o1js/dist/node/lib/field.js").Field;
        state: import("o1js/dist/node/lib/field.js").Field;
        name: any;
        description: any;
        image: any;
        evidenceHash: import("o1js/dist/node/lib/field.js").Field;
        metadataHash: import("o1js/dist/node/lib/field.js").Field;
        instructionsHash: import("o1js/dist/node/lib/field.js").Field;
        legalHash: import("o1js/dist/node/lib/field.js").Field;
        fee: import("o1js/dist/node/lib/field.js").Field;
        rewardsShare: import("o1js/dist/node/lib/field.js").Field;
        communityShare: import("o1js/dist/node/lib/field.js").Field;
        protocolShare: import("o1js/dist/node/lib/field.js").Field;
        strategyHash: import("o1js/dist/node/lib/field.js").Field;
        expiration: import("o1js/dist/node/lib/field.js").Field;
        revocable: import("o1js/dist/node/lib/bool.js").Bool;
        total: import("o1js/dist/node/lib/field.js").Field;
        available: import("o1js/dist/node/lib/field.js").Field;
        startsUTC: import("o1js/dist/node/lib/field.js").Field;
        endsUTC: import("o1js/dist/node/lib/field.js").Field;
        createdUTC: import("o1js/dist/node/lib/field.js").Field;
        updatedUTC: import("o1js/dist/node/lib/field.js").Field;
        approvedUTC: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        fields?: import("o1js/dist/node/lib/field.js").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field.js").Field, number][] | undefined;
    };
    toJSON: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        communityUid: import("o1js/dist/node/lib/field.js").Field;
        state: import("o1js/dist/node/lib/field.js").Field;
        name: any;
        description: any;
        image: any;
        evidenceHash: import("o1js/dist/node/lib/field.js").Field;
        metadataHash: import("o1js/dist/node/lib/field.js").Field;
        instructionsHash: import("o1js/dist/node/lib/field.js").Field;
        legalHash: import("o1js/dist/node/lib/field.js").Field;
        fee: import("o1js/dist/node/lib/field.js").Field;
        rewardsShare: import("o1js/dist/node/lib/field.js").Field;
        communityShare: import("o1js/dist/node/lib/field.js").Field;
        protocolShare: import("o1js/dist/node/lib/field.js").Field;
        strategyHash: import("o1js/dist/node/lib/field.js").Field;
        expiration: import("o1js/dist/node/lib/field.js").Field;
        revocable: import("o1js/dist/node/lib/bool.js").Bool;
        total: import("o1js/dist/node/lib/field.js").Field;
        available: import("o1js/dist/node/lib/field.js").Field;
        startsUTC: import("o1js/dist/node/lib/field.js").Field;
        endsUTC: import("o1js/dist/node/lib/field.js").Field;
        createdUTC: import("o1js/dist/node/lib/field.js").Field;
        updatedUTC: import("o1js/dist/node/lib/field.js").Field;
        approvedUTC: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        uid: string;
        communityUid: string;
        state: string;
        name: any;
        description: any;
        image: any;
        evidenceHash: string;
        metadataHash: string;
        instructionsHash: string;
        legalHash: string;
        fee: string;
        rewardsShare: string;
        communityShare: string;
        protocolShare: string;
        strategyHash: string;
        expiration: string;
        revocable: boolean;
        total: string;
        available: string;
        startsUTC: string;
        endsUTC: string;
        createdUTC: string;
        updatedUTC: string;
        approvedUTC: string;
    };
    fromJSON: (x: {
        uid: string;
        communityUid: string;
        state: string;
        name: any;
        description: any;
        image: any;
        evidenceHash: string;
        metadataHash: string;
        instructionsHash: string;
        legalHash: string;
        fee: string;
        rewardsShare: string;
        communityShare: string;
        protocolShare: string;
        strategyHash: string;
        expiration: string;
        revocable: boolean;
        total: string;
        available: string;
        startsUTC: string;
        endsUTC: string;
        createdUTC: string;
        updatedUTC: string;
        approvedUTC: string;
    }) => {
        uid: import("o1js/dist/node/lib/field.js").Field;
        communityUid: import("o1js/dist/node/lib/field.js").Field;
        state: import("o1js/dist/node/lib/field.js").Field;
        name: any;
        description: any;
        image: any;
        evidenceHash: import("o1js/dist/node/lib/field.js").Field;
        metadataHash: import("o1js/dist/node/lib/field.js").Field;
        instructionsHash: import("o1js/dist/node/lib/field.js").Field;
        legalHash: import("o1js/dist/node/lib/field.js").Field;
        fee: import("o1js/dist/node/lib/field.js").Field;
        rewardsShare: import("o1js/dist/node/lib/field.js").Field;
        communityShare: import("o1js/dist/node/lib/field.js").Field;
        protocolShare: import("o1js/dist/node/lib/field.js").Field;
        strategyHash: import("o1js/dist/node/lib/field.js").Field;
        expiration: import("o1js/dist/node/lib/field.js").Field;
        revocable: import("o1js/dist/node/lib/bool.js").Bool;
        total: import("o1js/dist/node/lib/field.js").Field;
        available: import("o1js/dist/node/lib/field.js").Field;
        startsUTC: import("o1js/dist/node/lib/field.js").Field;
        endsUTC: import("o1js/dist/node/lib/field.js").Field;
        createdUTC: import("o1js/dist/node/lib/field.js").Field;
        updatedUTC: import("o1js/dist/node/lib/field.js").Field;
        approvedUTC: import("o1js/dist/node/lib/field.js").Field;
    };
};
declare class ProvablePlan extends ProvablePlan_base {
    constructor(json?: any);
    fromJSON(json: {
        uid: string;
        communityUid: string;
        state?: number;
        name?: string;
        description?: string;
        image?: string;
        evidenceHash?: Field;
        metadataHash?: Field;
        instructionsHash?: Field;
        legalHash?: Field;
        fee?: number;
        rewardsShare?: number;
        communityShare?: number;
        protocolShare?: number;
        strategyHash?: string;
        expiration: number;
        revocable: boolean;
        total: number;
        available: number;
        startsUTC?: string;
        endsUTC?: string;
        createdUTC?: string;
        updatedUTC?: string;
        approvedUTC?: string;
    }): this;
    toJSON(): {
        uid: string;
        communityUid: string;
        state: bigint;
    };
    hash(): Field;
    key(): Field;
}
