import { Field, PublicKey } from 'o1js';
import { EntityState } from './entity-state.js';
export { ProvableCommunity, CommunityState };
declare const CommunityState: EntityState;
declare const ProvableCommunity_base: (new (value: {
    uid: import("o1js/dist/node/lib/field.js").Field;
    state: any;
    accountId: PublicKey;
    name: any;
    description: any;
    createdUTC: import("o1js/dist/node/lib/field.js").Field;
    updatedUTC: import("o1js/dist/node/lib/field.js").Field;
    approvedUTC: import("o1js/dist/node/lib/field.js").Field;
    adminUid: import("o1js/dist/node/lib/field.js").Field;
}) => {
    uid: import("o1js/dist/node/lib/field.js").Field;
    state: any;
    accountId: PublicKey;
    name: any;
    description: any;
    createdUTC: import("o1js/dist/node/lib/field.js").Field;
    updatedUTC: import("o1js/dist/node/lib/field.js").Field;
    approvedUTC: import("o1js/dist/node/lib/field.js").Field;
    adminUid: import("o1js/dist/node/lib/field.js").Field;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky.js").ProvablePure<{
    uid: import("o1js/dist/node/lib/field.js").Field;
    state: any;
    accountId: PublicKey;
    name: any;
    description: any;
    createdUTC: import("o1js/dist/node/lib/field.js").Field;
    updatedUTC: import("o1js/dist/node/lib/field.js").Field;
    approvedUTC: import("o1js/dist/node/lib/field.js").Field;
    adminUid: import("o1js/dist/node/lib/field.js").Field;
}> & {
    toInput: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        state: any;
        accountId: PublicKey;
        name: any;
        description: any;
        createdUTC: import("o1js/dist/node/lib/field.js").Field;
        updatedUTC: import("o1js/dist/node/lib/field.js").Field;
        approvedUTC: import("o1js/dist/node/lib/field.js").Field;
        adminUid: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        fields?: import("o1js/dist/node/lib/field.js").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field.js").Field, number][] | undefined;
    };
    toJSON: (x: {
        uid: import("o1js/dist/node/lib/field.js").Field;
        state: any;
        accountId: PublicKey;
        name: any;
        description: any;
        createdUTC: import("o1js/dist/node/lib/field.js").Field;
        updatedUTC: import("o1js/dist/node/lib/field.js").Field;
        approvedUTC: import("o1js/dist/node/lib/field.js").Field;
        adminUid: import("o1js/dist/node/lib/field.js").Field;
    }) => {
        uid: string;
        state: any;
        accountId: string;
        name: any;
        description: any;
        createdUTC: string;
        updatedUTC: string;
        approvedUTC: string;
        adminUid: string;
    };
    fromJSON: (x: {
        uid: string;
        state: any;
        accountId: string;
        name: any;
        description: any;
        createdUTC: string;
        updatedUTC: string;
        approvedUTC: string;
        adminUid: string;
    }) => {
        uid: import("o1js/dist/node/lib/field.js").Field;
        state: any;
        accountId: PublicKey;
        name: any;
        description: any;
        createdUTC: import("o1js/dist/node/lib/field.js").Field;
        updatedUTC: import("o1js/dist/node/lib/field.js").Field;
        approvedUTC: import("o1js/dist/node/lib/field.js").Field;
        adminUid: import("o1js/dist/node/lib/field.js").Field;
    };
};
declare class ProvableCommunity extends ProvableCommunity_base {
    constructor(json?: any);
    fromJSON(json: {
        uid: string;
        name?: string;
        description?: string;
        image?: string;
        accountId?: string;
        state?: string;
        createdUTC?: string;
        approvedUTC?: string;
        updatedUTC?: string;
        adminUid?: string;
    }): this;
    toJSON(): {
        uid: string;
        adminUid: string;
        accountId: string;
        name: any;
        description: any;
        state: any;
        approvedUTC: string;
        createdUTC: string;
        updatedUTC: string;
    };
    hash(): Field;
    key(): Field;
}
