import { Field } from 'o1js';
export { UTCDateTime };
class UTCDateTime extends Field {
    constructor(ts) {
        super(ts);
    }
    static fromString(isoString) {
        const utc = isoString || (new Date()).toISOString();
        const ts = (new Date(utc)).getTime();
        return new UTCDateTime(ts);
    }
    static now() {
        const utc = (new Date()).toISOString();
        const ts = (new Date(utc)).getTime();
        return new UTCDateTime(ts);
    }
    static fromField(f) {
        let ts = Number(f.toBigInt()); // millisec since 1970 in UTC
        const utc = new Date(ts).toISOString();
        return utc;
    }
    toPrettyDate() {
        let ts = Number(this.toBigInt()); // millisec since 1970 in UTC
        const utc = new Date(ts);
        const mo = [
            "Jan", "Feb", "Mar", "Apr", "May", "Jun",
            "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
        ];
        return `${utc.getDate()} ${mo[utc.getMonth()]} ${utc.getFullYear()}`;
    }
    toPrettyDateTime() {
        // utc.getHours()
        // utc.getMinutes()
        // utc.getSeconds
        // utc.getS
        return "";
    }
}
function testIt() {
    let createdUTC = "2023-05-01 12:01:01.000";
    let fi = UTCDateTime.fromString(createdUTC);
    let fi2str = UTCDateTime.fromField(fi);
    console.log(`${createdUTC} | ${fi.toString()} | ${fi2str}`);
}
//testIt();
//# sourceMappingURL=datetime.js.map