
Begin testing 'CommunitiesContract' at= 2023-07-27T15:30:44.579Z

Proofs enabled= true

Compiling Contract ... [class CommunitiesContract extends SmartContract] {
  _methods: [
    {
      methodName: 'assertOnlyDeployer',
      witnessArgs: [Array],
      proofArgs: [],
      allArgs: [Array],
      genericArgs: []
    },
    {
      methodName: 'checkMerkleUpdate',
      witnessArgs: [Array],
      proofArgs: [],
      allArgs: [Array],
      genericArgs: []
    },
    {
      methodName: 'updateCommunity',
      witnessArgs: [Array],
      proofArgs: [],
      allArgs: [Array],
      genericArgs: []
    },
    {
      methodName: 'updatePerson',
      witnessArgs: [Array],
      proofArgs: [],
      allArgs: [Array],
      genericArgs: []
    },
    {
      methodName: 'updateMember',
      witnessArgs: [Array],
      proofArgs: [],
      allArgs: [Array],
      genericArgs: []
    }
  ],
  _maxProofsVerified: 0
}
compiled !

Deploy
deployer Addr= PublicKey {
  x: Field { value: [ 0, [Uint8Array] ] },
  isOdd: Bool { value: [ 0, [Uint8Array] ] }
}
sender Addr= PublicKey {
  x: Field { value: [ 0, [Uint8Array] ] },
  isOdd: Bool { value: [ 0, [Uint8Array] ] }
}
zkApp Addr= B62qoKSLAcoumP7pHdzZczmZinSaS2S1BuePkcGK7gvqPnyHdo9yEw5
zkApp= CommunitiesContract {
  events: {},
  address: PublicKey {
    x: Field { value: [Array] },
    isOdd: Bool { value: [Array] }
  },
  tokenId: Field { value: [ 0, [Uint8Array] ] },
  _: {
    communitiesRoot: {
      _contract: [Object],
      set: [Function: set],
      assertEquals: [Function: assertEquals],
      assertNothing: [Function: assertNothing],
      get: [Function: get],
      getAndAssertEquals: [Function: getAndAssertEquals],
      fetch: [AsyncFunction: fetch],
      fromAppState: [Function: fromAppState]
    },
    personsRoot: {
      _contract: [Object],
      set: [Function: set],
      assertEquals: [Function: assertEquals],
      assertNothing: [Function: assertNothing],
      get: [Function: get],
      getAndAssertEquals: [Function: getAndAssertEquals],
      fetch: [AsyncFunction: fetch],
      fromAppState: [Function: fromAppState]
    },
    membersRoot: {
      _contract: [Object],
      set: [Function: set],
      assertEquals: [Function: assertEquals],
      assertNothing: [Function: assertNothing],
      get: [Function: get],
      getAndAssertEquals: [Function: getAndAssertEquals],
      fetch: [AsyncFunction: fetch],
      fromAppState: [Function: fromAppState]
    }
  }
}
Deployed

Begin testing 'testUpdateCommunity' at= 2023-07-27T15:32:21.085Z
ProvableCommunity {
  uid: Field { value: [ 0, [Uint8Array] ] },
  accountId: PublicKey {
    x: Field { value: [Array] },
    isOdd: Bool { value: [Array] }
  },
  name: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  description: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  state: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  image: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  approvedUTC: Field { value: [ 0, [Uint8Array] ] },
  createdUTC: Field { value: [ 0, [Uint8Array] ] },
  updatedUTC: Field { value: [ 0, [Uint8Array] ] },
  adminUid: Field { value: [ 0, [Uint8Array] ] }
}
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log equals afterLeaf.key= 59253117857963851694860569271078737050
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log hash= 3515145312712318032537537667918789248547981992254726810481428627522787417139
new communititesRoot= 5146703425751270635908848641538029496779838716456259931062577188385510275146
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log equals afterLeaf.key= 59253117857963851694860569271078737050
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log hash= 3515145312712318032537537667918789248547981992254726810481428627522787417139
new communititesRoot= 5146703425751270635908848641538029496779838716456259931062577188385510275146
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log equals afterLeaf.key= 59253117857963851694860569271078737050
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log hash= 3515145312712318032537537667918789248547981992254726810481428627522787417139
new communititesRoot= 5146703425751270635908848641538029496779838716456259931062577188385510275146
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log equals afterLeaf.key= 59253117857963851694860569271078737050
Circuit.log previousKey= 59253117857963851694860569271078737050
Circuit.log hash= 3515145312712318032537537667918789248547981992254726810481428627522787417139
MerkleMapUpdate= {
  "mapId": "1",
  "txId": "10",
  "beforeRoot": "22731122946631793544306773678309960639073656601863129978322145324846701682624",
  "beforeLeaf": {
    "key": "59253117857963851694860569271078737050",
    "hash": "0"
  },
  "afterRoot": "5146703425751270635908848641538029496779838716456259931062577188385510275146",
  "afterLeaf": {
    "key": "59253117857963851694860569271078737050",
    "hash": "3515145312712318032537537667918789248547981992254726810481428627522787417139"
  }
}
updatedRoot= 5146703425751270635908848641538029496779838716456259931062577188385510275146
assert updatedRoot eq .afterRoot is  true
Total time= 94.856 secs
Ended test at= 2023-07-27T15:33:55.941Z

Begin testing 'testUpdatePerson' at= 2023-07-27T15:33:55.941Z
ProvablePerson {
  uid: Field { value: [ 0, [Uint8Array] ] },
  accountId: PublicKey {
    x: Field { value: [Array] },
    isOdd: Bool { value: [Array] }
  },
  fullName: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  description: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  state: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  image: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  approvedUTC: Field { value: [ 0, [Uint8Array] ] },
  createdUTC: Field { value: [ 0, [Uint8Array] ] },
  updatedUTC: Field { value: [ 0, [Uint8Array] ] },
  email: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  phone: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  },
  telegram: CircuitString {
    values: [
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      [Character], [Character], [Character], [Character], [Character],
      ... 28 more items
    ]
  }
}
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log equals afterLeaf.key= 1495247593622716867310681694941429347
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log hash= 28737728892174734704385118642525206979927090258470063033620365165347223856616
Circuit.log newRoot= 7302161246025253486825247196652752201079772531938649657018232341939093330916
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log equals afterLeaf.key= 1495247593622716867310681694941429347
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log hash= 28737728892174734704385118642525206979927090258470063033620365165347223856616
Circuit.log newRoot= 7302161246025253486825247196652752201079772531938649657018232341939093330916
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log equals afterLeaf.key= 1495247593622716867310681694941429347
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log hash= 28737728892174734704385118642525206979927090258470063033620365165347223856616
Circuit.log newRoot= 7302161246025253486825247196652752201079772531938649657018232341939093330916
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log equals afterLeaf.key= 1495247593622716867310681694941429347
Circuit.log previousKey= 1495247593622716867310681694941429347
Circuit.log hash= 28737728892174734704385118642525206979927090258470063033620365165347223856616
MerkleMapUpdate= {
  "mapId": "2",
  "txId": "11",
  "beforeRoot": "22731122946631793544306773678309960639073656601863129978322145324846701682624",
  "beforeLeaf": {
    "key": "1495247593622716867310681694941429347",
    "hash": "0"
  },
  "afterRoot": "7302161246025253486825247196652752201079772531938649657018232341939093330916",
  "afterLeaf": {
    "key": "1495247593622716867310681694941429347",
    "hash": "28737728892174734704385118642525206979927090258470063033620365165347223856616"
  }
}
updatedRoot= 7302161246025253486825247196652752201079772531938649657018232341939093330916
assert updatedRoot eq .afterRoot is  true
Total time= 74.547 secs
Ended test at= 2023-07-27T15:35:10.488Z

Begin testing 'testUpdateMember' at= 2023-07-27T15:35:10.489Z
ProvableMember {
  communityUid: Field { value: [ 0, [Uint8Array] ] },
  personUid: Field { value: [ 0, [Uint8Array] ] },
  role: Field { value: [ 0, [Uint8Array] ] }
}
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log equals afterLeaf.key= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log hash= 1
Circuit.log newRoot= 19442733228527912476173455976665191281079626194535085568398588314260478025488
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log equals afterLeaf.key= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log hash= 1
Circuit.log newRoot= 19442733228527912476173455976665191281079626194535085568398588314260478025488
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log equals afterLeaf.key= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log hash= 1
Circuit.log newRoot= 19442733228527912476173455976665191281079626194535085568398588314260478025488
Circuit.log previousRoot= 22731122946631793544306773678309960639073656601863129978322145324846701682624
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log equals afterLeaf.key= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log previousKey= 14262796037843965958723699770632843027297819509697389884636006089603381300283
Circuit.log hash= 1
MerkleMapUpdate= {
  "mapId": "3",
  "txId": "12",
  "beforeRoot": "22731122946631793544306773678309960639073656601863129978322145324846701682624",
  "beforeLeaf": {
    "key": "14262796037843965958723699770632843027297819509697389884636006089603381300283",
    "hash": "0"
  },
  "afterRoot": "19442733228527912476173455976665191281079626194535085568398588314260478025488",
  "afterLeaf": {
    "key": "14262796037843965958723699770632843027297819509697389884636006089603381300283",
    "hash": "1"
  }
}
updatedRoot= 19442733228527912476173455976665191281079626194535085568398588314260478025488
assert updatedRoot eq .afterRoot is  true
Total time= 33.024 secs
Ended test at= 2023-07-27T15:35:43.513Z
